service: gen-ai-service
frameworkVersion: '4'

package:
  individually: true
  exclude:
    - "./*"
    - "src/*"
    - "node_modules/*"


provider:
  name: aws
  runtime: nodejs22.x
  stage: ${opt:stage, 'pre'}
  timeout: 28
  region: ${opt:region, "eu-west-1"}
  memorySize: 512
  logRetentionInDays: 90
  apiGateway: 
    request:
      schemas:
        readyForPickupModel:
          schema: ${file(./iac/api/schemas/schema-messages.json)}
          name: messagesModel
          description: 'Schema for MessageModel'
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    SERVICE: ${self:service}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    GLOBAL_TIMEOUT: 15000
    KEY_SSM: /aws/ssm/parameter/genaiapikey
    #KEY_SSM2: ${ssm:/parameter/genaiapikey}
  lambdaHashingVersion: 20201221
  architecture: arm64

  iamRoleStatements:
  - Effect: Allow
    Action:
      - states:*
    Resource: "*"
  
  - Effect: Allow
    Action:
      - lambda:*
    Resource: "*"

  - Effect: "Allow"
    Action:
      - "secretsmanager:*"
    Resource: "*"

  - Effect: "Allow"
    Action:
      - "ssm:*"
    Resource: "*"

#functions:
  #scrapper: '${file(./iac/lambda/scrapper.yml):scrapper}'
  #createIteminTable: '${file(./iac/lambda/createIteminTable.yml):createIteminTable}'
  

resources:
  Resources:
    # ---------- QUEUE ðŸ«¡ ----------------
    genaiQueue: '${file(./iac/queues/genaiQueue.yml):genaiQueue}'

    # ---------- PIPES ðŸ«¡ ----------------
    genaiPipeRole: '${file(./iac/pipes/genaiPipe.yml):genaiPipeRole}'
    genaiPipe: '${file(./iac/pipes/genaiPipe.yml):genaiPipe}'

    # ---------- STATE MACHINE DEFINITION ðŸ«¡ ----------------
    statesLogGroup: '${file(./iac/states/genaistate.yml):statesLogGroup}'
    genaiState: '${file(./iac/states/genaistate.yml):genaiState}'
    statesRole: '${file(./iac/states/statesRole.yml):statesRole}'

    # ---------- WEBSOCKET API ðŸ«¡ ----------------
    WebSocketApi: '${file(./iac/api/websocket_api.yml):WebSocketApi}'
    WebSocketApiDeployment: '${file(./iac/api/websocket_api.yml):WebSocketApiDeployment}'
    WebSocketApiStage: '${file(./iac/api/websocket_api.yml):WebSocketApiStage}'
    WebSocketApiIntegrationRole: '${file(./iac/api/websocket_api.yml):WebSocketApiIntegrationRole}'
    DefaultRoute: '${file(./iac/api/websocket_api.yml):DefaultRoute}'
    DefaultRouteIntegration: '${file(./iac/api/websocket_api.yml):DefaultRouteIntegration}'
    DefaultRouteResponse: '${file(./iac/api/websocket_api.yml):DefaultRouteResponse}'
    DefaultRouteIntegrationResponse: '${file(./iac/api/websocket_api.yml):DefaultRouteIntegrationResponse}'
    ConnectRoute: '${file(./iac/api/websocket_api.yml):ConnectRoute}'

    # ---------- REST API ðŸ«¡ ----------------

    restApi: '${file(./iac/api/rest_api.yml):restApi}'
    #Stage: '${file(./iac/api/rest_api.yml):Stage}'
    #restApiDeploy: '${file(./iac/api/rest_api.yml):restApiDeploy}'
    restApiRole: '${file(./iac/api/rest_api.yml):restApiRole}'

    ## ---------- RESOURCES - REST API ðŸ«¡ ----------------
    queueEventResource: '${file(./iac/api/definitions/queue_event.yml):queueEventResource}'
    queueEventMethodPost: '${file(./iac/api/definitions/queue_event.yml):queueEventMethodPost}'

    # ------------ CDN ðŸ¤¨ ------------------
    genaiDistribution: '${file(./iac/cdn/cdn.yml):genaiDistribution}'

  

    # ---------- API KEYS ðŸ«¡ ----------------
    ApiKey: '${file(./iac/api/websocket_api.yml):ApiKey}'
    UsagePlanKey: '${file(./iac/api/websocket_api.yml):UsagePlanKey}'
    UsagePlan: '${file(./iac/api/websocket_api.yml):UsagePlan}'

    

    # ---------- DYNAMO ðŸ«¡ ---------------
    privateModel: '${file(./iac/dynamo/privateModel.yml):privateModel}'

    # ---------- S3 TABLE ðŸ«¡ ---------------
    s3Table: '${file(./iac/s3/tables.yml):s3Table}'
    s3TableOutput: '${file(./iac/s3/tables.yml):s3TableOutput}'

    contentBucket: '${file(./iac/s3/content.yml):contentBucket}'

    

custom:
  rust:
    cargoLambda:
      docker: false

  api_region:
    eu-west-1:
      genai_api_primary:
        pre: gvy669mge1.execute-api.eu-west-1.amazonaws.com
      genai_api_secondary:
        pre: gvy669mge1.execute-api.eu-west-1.amazonaws.com
      sg: sg-0fbb09e6349387e81
      subnets:
        a: subnet-0346ce0e98266dc19
        b: subnet-04f586497beeb857d
        c: subnet-0c988a98bea52667d
  
  serverlessSsmFetch:
    API_KEY: gen-ai-apikey-secret-${self:provider.stage}~true

  #s3-table: arn:aws:s3tables:us-east-1:178934116267:bucket/test-table-bucket


  prune:    
    automatic: true    
    includeLayers: true    
    number: 3

plugins:
  - serverless-prune-plugin
#  - serverless-rust-plugin
  - serverless-ssm-fetch


