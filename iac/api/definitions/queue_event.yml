queueEventResource:
  Type: 'AWS::ApiGateway::Resource'
  Properties:
    RestApiId: !Ref restApi
    ParentId: !GetAtt restApi.RootResourceId
    PathPart: 'queuevent'

#   -----  CREATE-----------

queueEventMethodPost:
  Type: AWS::ApiGateway::Method
  Properties:
    ResourceId:
      Ref: queueEventResource
    RestApiId:
      Ref: restApi
    HttpMethod: POST
    #ApiKeyRequired: true
    AuthorizationType: NONE
    #AuthorizationType: CUSTOM
    #AuthorizerId: !Ref authorizerdefinition
    Integration:
      Type: AWS
      Credentials: !GetAtt restApiRole.Arn
      IntegrationHttpMethod: POST
      Uri: !Sub "arn:aws:apigateway:${self:provider.region}:sqs:action/SendMessage"
      RequestParameters:
        integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        integration.request.querystring.QueueUrl: "'https://sqs.${self:provider.region}.amazonaws.com/178934116267/gen-ai-queue-${self:provider.stage}'"
      RequestTemplates:
        application/json: Action=SendMessage&MessageBody=$util.urlEncode($input.body)
      IntegrationResponses:
        - StatusCode: '200'
          ResponseTemplates:
              application/json: |
                {
                  "requestid": "$context.requestId"
                }
      PassthroughBehavior: NEVER
    MethodResponses:
      - ResponseModels:
          application/json: Empty
        StatusCode: "200"
